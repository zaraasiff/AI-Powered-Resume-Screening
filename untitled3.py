# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RhvYVLebUvQoB8-yjc0mk_vYSIvCo7qa
"""

!pip install PyPDF2 python-docx scikit-learn pandas numpy matplotlib seaborn
!pip install requests transformers
!pip install docx2txt

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
import re
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from PyPDF2 import PdfReader
import docx2txt

from google.colab import files
import pandas as pd
uploaded= files.upload()
# Correcting the filename based on the upload output
resume = pd.read_csv("UpdatedResumeDataSet.csv")

print("Shape of data set", resume.shape)
resume.head()

resume['Category'].value_counts()

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(15, 5))
sns.countplot(x='Category', data = resume)
plt.xticks(rotation=90)
plt.title("Distribution of Resume Categories")
plt.show()

def extract_text_from_pdf(file_path):
    text = ""
    with open(file_path, "rb") as f:
        reader = PdfReader(f)
        for page in reader.pages:
            text += page.extract_text() or ""
    return text

def extract_text_from_docx(file_path):
    return docx2txt.process(file_path)

def clean_text(text):
    text = str(text).lower()
    text = re.sub(r"[^a-z\s]", " ", text)
    return text

resume["cleaned"] = resume["Resume"].apply(clean_text)
resume.head()

vectorizer = TfidfVectorizer(stop_words="english")
X = vectorizer.fit_transform(resume["cleaned"])

def rank_resumes(job_desc, resumes, top_n=5):
    job_desc = clean_text(job_desc)
    job_vec = vectorizer.transform([job_desc])
    scores = cosine_similarity(job_vec, X).flatten()
    resume["score"] = scores
    return resume[["Resume", "Category", "score"]].sort_values(by="score", ascending=False).head(top_n)

job_description = "Looking for a data scientist skilled in Python, Machine Learning, and NLP."
top_resumes = rank_resumes(job_description, resume["cleaned"])
top_resumes

top_resumes.to_csv("ranked_resumes.csv", index=False)
files.download("ranked_resumes.csv")

pip install -q -U google-genai

import google.generativeai as genai

# Configure API key
genai.configure(api_key="AIzaSyBXQCEW9JBBX8PdRh24mzCv3JXIQyazvFQ")

# List available models (yeh dekhne ke liye ke kaunsa model active hai)
for m in genai.list_models():
    print(m.name)

model = genai.GenerativeModel("models/gemini-2.5-flash")

prompt = """
You are an AI resume screener.
Given this resume text: 'Experienced in python, SQL, and machine learning.'
and this job description: 'Looking for a Data Scientist with Python and ML expertise.'
Score the match out of 10 and give a short reason.
"""

response = model.generate_content(prompt)
print(response.text)